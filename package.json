{
  "name": "vscode-yaml-sort",
  "displayName": "YAML Sort",
  "description": "This VS Code extension exposes the possibility to sort, format and validate yaml files.",
  "version": "6.6.2",
  "engines": {
    "vscode": "^1.49.0"
  },
  "license": "MIT",
  "publisher": "PascalReitermann93",
  "repository": {
    "type": "git",
    "url": "https://github.com/pascalre/vscode-yaml-sort"
  },
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#203342",
    "theme": "dark"
  },
  "keywords": [
    "yaml",
    "yml",
    "sorting",
    "formatting"
  ],
  "categories": [
    "Programming Languages",
    "Formatters"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "yaml",
        "aliases": [
          "YAML",
          "yaml"
        ],
        "extensions": [
          ".yml",
          ".eyaml",
          ".eyml",
          ".yaml"
        ]
      }
    ],
    "configuration": {
      "properties": {
        "vscode-yaml-sort.emptyLinesUntilLevel": {
          "type": "number",
          "default": 0,
          "description": "When bigger than 0, will add a new line before each keyword on level n."
        },
        "vscode-yaml-sort.customSortKeywords_1": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "apiVersion",
            "kind",
            "metadata",
            "spec",
            "data"
          ],
          "description": "List of keywords for Custom Sort 1."
        },
        "vscode-yaml-sort.customSortKeywords_2": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "List of keywords for Custom Sort 2."
        },
        "vscode-yaml-sort.customSortKeywords_3": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "List of keywords for Custom Sort 3."
        },
        "vscode-yaml-sort.extensions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "yaml",
            "yml"
          ],
          "description": "Files with matching extensions will be processed in recursive sort"
        },
        "vscode-yaml-sort.forceQuotes": {
          "type": "boolean",
          "default": false,
          "description": "When true, all non-key strings will be quoted even if they normally don't need to."
        },
        "vscode-yaml-sort.indent": {
          "type": "integer",
          "default": 2,
          "description": "Indentation width in spaces."
        },
        "vscode-yaml-sort.lineWidth": {
          "type": "integer",
          "default": 500,
          "description": "Maximum line width for YAML files."
        },
        "vscode-yaml-sort.locale": {
          "type": "string",
          "default": "en",
          "description": "Language whose sort order should be used."
        },
        "vscode-yaml-sort.noArrayIndent": {
          "type": "boolean",
          "default": false,
          "description": "When true, will not add an indentation level to array elements."
        },
        "vscode-yaml-sort.noCompatMode": {
          "type": "boolean",
          "default": false,
          "description": "When true, don't try to be compatible with older yaml versions. Currently: don't quote 'yes', 'no' and so on, as required for YAML 1.1"
        },
        "vscode-yaml-sort.notifySuccess": {
          "type": "boolean",
          "default": true,
          "description": "When true, will notify on successfully performed tasks."
        },
        "vscode-yaml-sort.quotingType": {
          "type": "string",
          "default": "'",
          "enum": [
            "'",
            "\""
          ],
          "description": "Strings will be quoted using this quoting style. If you specify single quotes, double quotes will still be used for non-printable characters."
        },
        "vscode-yaml-sort.schema": {
          "type": "string",
          "default": "DEFAULT_SCHEMA",
          "enum": [
            "HOMEASSISTANT_SCHEMA",
            "CLOUDFORMATION_SCHEMA",
            "CORE_SCHEMA",
            "DEFAULT_SCHEMA",
            "FAILSAFE_SCHEMA",
            "JSON_SCHEMA"
          ],
          "description": "Schema to use"
        },
        "vscode-yaml-sort.sortArrays": {
          "type": "boolean",
          "default": false,
          "description": "When `true`, will sort arrays"
        },
        "vscode-yaml-sort.sortOrderReverse": {
          "type": "boolean",
          "default": false,
          "description": "When `true`, will sort in reverse order"
        },
        "vscode-yaml-sort.sortOnSave": {
          "type": "number",
          "default": 0,
          "description": "When `0`, will sort files when saving. When `1`, `2` or `3`, will use customSortKeywords. Set to negative value to disable sortOnSave."
        },
        "vscode-yaml-sort.useCustomSortRecursively": {
          "type": "boolean",
          "default": false,
          "description": "When true, will use the custom sort keywords recursively on a file, when using custom sort"
        },
        "vscode-yaml-sort.useLeadingDashes": {
          "type": "boolean",
          "default": true,
          "description": "Define if sorted YAML files should begin with leading dashes."
        },
        "vscode-yaml-sort.useArrayProcessor": {
          "type": "boolean",
          "default": true,
          "description": "When `true`, will activate ArrayProcessor"
        },
        "vscode-yaml-sort.useBlockProcessor": {
          "type": "boolean",
          "default": true,
          "description": "When `true`, will activate BlockProcessor"
        },
        "vscode-yaml-sort.useCommentProcessor": {
          "type": "boolean",
          "default": true,
          "description": "When `true`, will activate CommentProcessor"
        },
        "vscode-yaml-sort.useHelmProcessor": {
          "type": "boolean",
          "default": true,
          "description": "When `true`, will activate HelmProcessor"
        },
        "vscode-yaml-sort.useOctalProcessor": {
          "type": "boolean",
          "default": true,
          "description": "When `true`, will activate OctalProcessor"
        }
      }
    },
    "commands": [
      {
        "command": "vscode-yaml-sort.customSortYaml_1",
        "title": "YAML Sort: Custom sort 1",
        "when": "editorLangId == yaml"
      },
      {
        "command": "vscode-yaml-sort.customSortYaml_2",
        "title": "YAML Sort: Custom sort 2",
        "when": "editorLangId == yaml"
      },
      {
        "command": "vscode-yaml-sort.customSortYaml_3",
        "title": "YAML Sort: Custom sort 3",
        "when": "editorLangId == yaml"
      },
      {
        "command": "vscode-yaml-sort.formatYaml",
        "title": "YAML Sort: Format YAML",
        "when": "editorLangId == yaml"
      },
      {
        "command": "vscode-yaml-sort.sortYaml",
        "title": "YAML Sort: Sort YAML",
        "when": "editorLangId == yaml"
      },
      {
        "command": "vscode-yaml-sort.sortYamlFilesInDirectory",
        "title": "YAML Sort: Recursively sort YAML files"
      },
      {
        "command": "vscode-yaml-sort.validateYaml",
        "title": "YAML Sort: Validate YAML",
        "when": "editorLangId == yaml"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "vscode-yaml-sort.sortYamlFilesInDirectory",
          "title": "Recursively sort YAML files"
        }
      ]
    }
  },
  "scripts": {
    "code-analysis": "npx depcruise --validate .dependency-cruiser.js src",
    "compile": "tsc -p ./",
    "coverage": "rm -rf .nyc_output && rm -rf coverage && nyc npm run test",
    "lint": "eslint .",
    "lint:fix": "npm run lint -- --fix",
    "pretest": "npm run compile",
    "sonar": "node sonar-project.js",
    "test": "node ./out/test/runTest.js",
    "vscode:prepublish": "npm run compile",
    "watch": "tsc -watch -p ./"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.4",
    "@types/node": "^22.13.10",
    "@types/sinon": "^17.0.3",
    "@typescript-eslint/eslint-plugin": "^7.2.0",
    "@typescript-eslint/parser": "^7.2.0",
    "coveralls": "3.1.1",
    "dependency-cruiser": "^17.0.1",
    "eslint": "^8.57.0",
    "eslint-import-resolver-typescript": "^4.2.2",
    "eslint-plugin-import": "^2.27.5",
    "jsdoc": "^4.0.2",
    "mocha": "^11.1.0",
    "nyc": "^17.1.0",
    "sinon": "^21.0.0",
    "sonarqube-scanner": "^4.2.5",
    "ts-node": "10.9.2",
    "typescript": "^5.3.3",
    "typescript-require": "0.3.0"
  },
  "dependencies": {
    "@types/js-yaml": "^4.0.6",
    "@types/vscode": "^1.98.0",
    "@vscode/test-electron": "^2.1.5",
    "cloudformation-js-yaml-schema": "^0.4.2",
    "glob": "^11.0.3",
    "homeassistant-js-yaml-schema": "^1.1.0",
    "js-yaml": "^4.1.0"
  }
}
